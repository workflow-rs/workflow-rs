[package]
name = "workflow-terminal"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true
# version = "0.5.2"
keywords = ["wasm","browser","terminal","cli"]
categories = ["command-line-interface","web-programming::http-client","wasm"]
include = [    "src/**/*.rs","Cargo.toml","README.md","extern/resources/*.js","extern/resources/*.css"]

description = """
Terminal abstraction layer over Xterm.js and termion crates for 
creating terminal applications that function uniformly in native
(console) and in browser (WASM32) environments.
"""

[lib]
crate-type = ["cdylib", "lib"]
doctest = false

[features]
termion = ["dep:termion"]

[dependencies]
async-std.workspace = true
async-trait.workspace = true
cfg-if.workspace = true
downcast.workspace = true
futures.workspace = true
js-sys.workspace = true
numtoa.workspace = true
regex.workspace = true
textwrap.workspace = true
thiserror.workspace = true
wasm-bindgen-futures.workspace = true
wasm-bindgen.workspace = true
workflow-core.workspace = true
workflow-dom.workspace = true
workflow-log.workspace = true
workflow-wasm.workspace = true
workflow-terminal-macros.workspace = true
nw-sys.workspace = true
pad.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
crossterm.workspace = true
termion = { workspace = true, optional = true }

[dependencies.web-sys]
workspace = true
features = [
    'Blob',
    'CssStyleDeclaration',
    'CustomEvent',
    'DataTransfer',
    'Document',
    'Element',
    'Event',
    'EventTarget',
    'HtmlCollection',
    'KeyboardEvent',
    'Node',
    'NodeList',
    'ResizeObserver',
    'Url',
    'Window',
]

[dev-dependencies]
tokio.workspace = true

[lints]
workspace = true
